# Generated by Django 4.2.13 on 2024-06-22 16:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=255)),
                ('cover', models.ImageField(upload_to='static/images/books')),
                ('description', models.CharField(max_length=2000)),
                ('edition', models.IntegerField()),
                ('publisher', models.CharField(max_length=255)),
                ('year', models.IntegerField()),
                ('num_pages', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Livro',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='BookCopy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_status', models.CharField(choices=[('AVAILABLE', 'Available'), ('BORROWED', 'Borrowed'), ('RESERVED', 'Reserved')], default='AVAIABLE', max_length=15)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.book')),
            ],
            options={
                'verbose_name': 'Exemplar',
                'verbose_name_plural': 'Exemplares',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='categories',
            field=models.ManyToManyField(to='book.category'),
        ),
    ]
